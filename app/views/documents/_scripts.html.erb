<% content_for :scripts do %>
<script src="/js/quill.min.js"></script>
<script src="/js/tocbot.min.js"></script>
<script type="text/javascript">
	// quilljs cdn: https://cdn.quilljs.com/1.3.6/quill.js
	// tocbot cdn: https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.1.1/tocbot.min.js
	$(document).ready(function() {
		let Embed = Quill.import('blots/embed');
		let Block = Quill.import('blots/block');
		let BlockEmbed = Quill.import('blots/block/embed');

		class TemplateMarker extends Embed {
	    	static create(value) {
		        let node = super.create(value);
		        switch(value.marker.substr(1, 3)) {
		        	case 'doc':
				        node.setAttribute('class', 'btn btn-xs btn-info');
		        		break;
		        	case 'rec':
				        node.setAttribute('class', 'btn btn-xs btn-warning');
		        		break;
		        	case 'res':
				        node.setAttribute('class', 'btn btn-xs btn-success');
				        break;
				    default:
				        node.setAttribute('class', 'btn btn-xs btn-danger');
			    }
		        node.setAttribute('data-marker', value.marker);
		        node.setAttribute('data-title', value.title);
		        node.innerHTML = value.title;
		        return node;
		    }
			static value(node) {
		        return {
		            marker: node.getAttribute('data-marker'),
		            title: node.getAttribute('data-title'),
		        };
		    }
		}
		TemplateMarker.blotName = 'TemplateMarker';
		TemplateMarker.tagName = 'span';

		class ListItemBlot extends Block {
		  static formats(node) {
		    return ListItemBlot.tagName.indexOf(node.tagName) + 1;
		  }
		}
		ListItemBlot.blotName = 'list';
		ListItemBlot.tagName = ['li'];

		Quill.register({
		    'formats/TemplateMarker': TemplateMarker
		});
		Quill.register(ListItemBlot);

		var options = {
		  	modules: {
			    toolbar: "#toolbar"
			},
			placeholder: 'Procedure details...',
			theme: 'snow'
		};

		var quill = new Quill('#text_content', options);

	   	tocbot.init({
			tocSelector: '#toc',
			contentSelector: '#text_content',
			headingSelector: 'li',
		});

		quill.on('text-change', function(delta, oldDelta, source) {
			var veditor = document.getElementById("text_content");
	        var vh1 = veditor.getElementsByTagName("li");   
	        for (i=0;i<vh1.length;i++) vh1[i].setAttribute("id", "id_"+ (i+1));
	        tocbot.refresh();
	   	});

		$('.ql-insertRef').on('change', function() {
			let range = quill.getSelection(true);
			quill.insertEmbed(
			    range.index,
			    'TemplateMarker',
			    {
					marker: $(this).find(':selected').data('marker'),
					title: $(this).find(':selected').data('title')
				},
			);
			quill.insertText(range.index + 1, ' ', Quill.sources.USER);
			quill.setSelection(range.index + 2, Quill.sources.SILENT);
			$(this).val("");
		});

		$("#activity-button").on("click", function(e) {
			e.preventDefault();
			t=undefined!=quill.getFormat().list;
			quill.format('list', !t);
	  	});

	  	$('#toc_hide').click(function(e) {
			coltoc=$(".col_toc");
			if(coltoc[0].style.display=="none") {
				coltoc.show();
			}
			else {
				coltoc.hide();
			}
			e.preventDefault();
		});
		$(window).resize(function() {
			s_height = $(window).height() - $('.ql-editor')[0].getBoundingClientRect().top + window.scrollY - 10 +'px';
			$('.ql-editor')[0].style.height = s_height;
			$('#toc')[0].style.height = s_height;
		});
		$("#save_btn").on("click", function(e) {
			$("#document_content").val(JSON.stringify(quill.getContents()));
	  	});
	  	if($("#document_content")) {
	  		try {
		  		quill.setContents(JSON.parse($("#document_content").val()));
		  	} catch(e) {
		  		$("#document_content").val("");
		  	}
	  	}
		s_height = $(window).height() - $('.ql-editor')[0].getBoundingClientRect().top + window.scrollY - 10 +'px';
		$('.ql-editor')[0].style.height = s_height;
		$('#toc')[0].style.height = s_height;
	});
</script>
<% end %>